networks:
  rnk_nw: {}  # Custom network name

volumes:
  mysql_vol:  # Custom volume for MySQL data

# Image building 
services: 
  mysql_image: # mysql Image building
    build:
      context: /home/ec2-user/docker-volumes-compose/mysql/
      dockerfile: Dockerfile
    image: mysql:1.0.0

  backend_image: # backend Image building
    build:
      context: /home/ec2-user/docker-volumes-compose/backend/
      dockerfile: Dockerfile
    image: backend:1.0.0

  frontend_image: # frontend Image building
    build:
      context: /home/ec2-user/docker-volumes-compose/frontend/
      dockerfile: Dockerfile
    image: frontend:1.0.0


# container running 

services: 
  
  mysql_container: # running mysql conatiner
    image: mysql:1.0.0
    networks:
    - rnk_nw # Attach to custom network
    container_name: mysql # Custom container name
    volumes:
    - mysql_vol:/var/lib/mysql # Store data in volume
    depends_on:
    - mysql_image

  backend_container: # running backend conatiner
    image: backend:1.0.0
    command: sh -c "sleep 20 && node /opt/backend/index.js"
    networks:
    - rnk_nw # Attach to custom network
    container_name: backend # Custom container name
    depends_on:
    - mysql_container
  
  frontend_container: # running frontend conatiner
    image: frontend:1.0.0
    networks:
    - rnk_nw # Attach to custom network
    container_name: frontend # Custom container name
    volumes:
    - mysql_vol:/usr/share/nginx/html/ # Store data in volume
    ports:
    - "80:80"
    depends_on:
    - backend_container

 